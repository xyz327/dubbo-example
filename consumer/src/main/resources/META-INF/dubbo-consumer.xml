<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
  xmlns="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
  <!-- consumer's application name, used for tracing dependency relationship (not a matching criterion),
    don't set it same as provider -->
  <dubbo:application name="demo-consumer"/>

  <!-- use multicast registry center to discover service -->
  <dubbo:registry address="multicast://224.5.6.7:1234"/>
  <dubbo:consumer check="true"/>
  <!-- generate proxy for the remote service, then demoService can be used in the same way as the
  local regular interface -->
  <dubbo:reference id="helloService" check="true" interface="cn.xz.dubbo.api.HelloService"/>


  <!--参数回调bean-->
  <dubbo:reference id="callbackService" interface="cn.xz.dubbo.api.CallbackService"/>

  <!--事件通知-->
  <bean id="eventServiceNotify" class="cn.xz.dubbo.consumer.event.EventServiceNotifyImpl"/>
  <dubbo:reference id="eventService" interface="cn.xz.dubbo.api.event.EventService">
    <dubbo:method name="testEvent" oninvoke="eventServiceNotify.oninvoke" onreturn="eventServiceNotify.onreturn"
      onthrow="eventServiceNotify.onthrow"/>
  </dubbo:reference>
</beans>